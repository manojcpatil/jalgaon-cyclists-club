name: Strava sync (matrix)

on:
  workflow_dispatch:

permissions:
  contents: write   # required only if you want the workflow to commit files back to repo

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python deps (for matrix generation)
        run: |
          python -m pip install --upgrade pip
          pip install gspread oauth2client pandas

      - name: Generate athlete matrix JSON
        id: gen-matrix
        env:
          GOOGLE_SHEETS_JSON: ${{ secrets.GOOGLE_SHEETS_JSON }}
          SHEET_URL: ${{ secrets.SHEET_URL }}
        run: |
          python - <<'PY' > athletes.json
          import json
          from download_one_from_sheet import read_sheet_rows, _get_field
          rows = read_sheet_rows()
          include = []
          for r in rows:
              aid = str(_get_field(r, "Athlete ID", "AthleteID", "Athlete Id", "athlete id", "Athlete_Id", default="") or "").strip()
              # OPTIONAL: only include rows that have a refresh/access token to avoid failures
              # refresh = _get_field(r, "Refresh Token", "RefreshToken", default="") or ""
              # if aid and refresh:
              if aid:
                  include.append({"athlete_id": aid})
          print(json.dumps({"include": include}))
          PY
          cat athletes.json

      - name: Set matrix output for downstream jobs
        id: set-matrix
        run: |
          # write the JSON into the step output (job output maps to this)
          echo "matrix=$(cat athletes.json)" >> $GITHUB_OUTPUT

  run-athlete:
    needs: build-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.build-matrix.outputs.matrix).include }}
      max-parallel: 2   # ADJUST: controls concurrency to avoid Strava rate limits
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install runtime deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true   # adjust to your deps

      - name: Run download for athlete
        env:
          GOOGLE_SHEETS_JSON: ${{ secrets.GOOGLE_SHEETS_JSON }}
          SHEET_URL: ${{ secrets.SHEET_URL }}
          STRAVA_CLIENT_ID: ${{ secrets.STRAVA_CLIENT_ID }}
          STRAVA_CLIENT_SECRET: ${{ secrets.STRAVA_CLIENT_SECRET }}
          TARGET_ATHLETE_ID: ${{ matrix.athlete_id }}
        run: |
          echo "Starting sync for athlete: $TARGET_ATHLETE_ID"
          python download_one_from_sheet.py

      - name: Commit outputs (optional)
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add strava_output || true
          git commit -m "Strava outputs: ${{ matrix.athlete_id }}" || echo "no changes to commit"
          git push || echo "push failed (maybe permissions)"
