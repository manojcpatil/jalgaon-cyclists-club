
name: Download single Strava athlete (merge into all)

on:
  workflow_dispatch:
    inputs:
      athlete_id:
        description: "Athlete ID or username to fetch"
        required: true
        type: string

permissions:
  contents: write
  actions: read

jobs:
  download-one:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      OUTPUT_DIR: "strava_output"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas gspread oauth2client

      - name: Create output dir
        run: mkdir -p "${{ env.OUTPUT_DIR }}"

      - name: Run Strava single-athlete merge
        env:
          GOOGLE_SHEETS_JSON: ${{ secrets.GOOGLE_SHEETS_JSON }}
          SHEET_URL: ${{ secrets.SHEET_URL }}
          STRAVA_CLIENT_ID: ${{ secrets.STRAVA_CLIENT_ID }}
          STRAVA_CLIENT_SECRET: ${{ secrets.STRAVA_CLIENT_SECRET }}
          OUTPUT_DIR: ${{ env.OUTPUT_DIR }}
          TARGET_ATHLETE_ID: ${{ github.event.inputs.athlete_id }}
        run: |
          if [ ! -f ./download_one_from_sheet.py ]; then
            echo "ERROR: download_one_from_sheet.py not found in repo root"
            exit 2
          fi
          python ./download_one_from_sheet.py

      - name: List outputs
        run: |
          echo "Contents of ${{ env.OUTPUT_DIR }}:"
          ls -la "${{ env.OUTPUT_DIR }}" || true

      - name: Upload outputs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: strava-single-athlete-outputs
          path: |
            ${{ env.OUTPUT_DIR }}/*

      - name: Commit outputs back to repository
        if: always()
        env:
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: actions@github.com
        run: |
          git config user.name "${GIT_AUTHOR_NAME}"
          git config user.email "${GIT_AUTHOR_EMAIL}"
          git add "${{ env.OUTPUT_DIR }}" || true
          if ! git diff --cached --quiet; then
            git commit -m "chore: update Strava outputs for ${{ github.event.inputs.athlete_id }} ($(date -u +'%Y-%m-%d %H:%M UTC'))" || true
            git push origin HEAD || echo "Push failed (maybe branch protection prevents pushing)."
          else
            echo "No changes to commit."
          fi
